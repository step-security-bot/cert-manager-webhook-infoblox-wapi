plugins:

  # See https://k9scli.io/topics/plugins/
  raw-logs-follow:
    # Define a mnemonic to invoke the plugin
    shortCut: Ctrl-L
    # What will be shown on the K9s menu
    description: Logs Watch
    # Collections of views that support this shortcut. (You can use `all`)
    scopes:
    - po
    # The command to run upon invocation. Can use Krew plugins here too!
    command: kubectl
    # Whether or not to run the command in background mode
    background: false
    # Defines the command arguments
    args:
    - logs
    - -f
    - $NAME
    - -n
    - $NAMESPACE
    - --context
    - $CONTEXT
  log-less:
    shortCut: Shift-L
    description: "Logs Less"
    scopes:
    - po
    command: bash
    background: false
    args:
    - -c
    - '"$@" | less'
    - dummy-arg
    - kubectl
    - logs
    - $NAME
    - -n
    - $NAMESPACE
    - --context
    - $CONTEXT
  dive:
    shortCut: d
    confirm: false
    description: "Dive Image"
    scopes:
      - containers
    command: dive
    background: false
    args:
      - $COL-IMAGE
  remove_finalizers:
  # Removes all finalizers from the selected resource. Finalizers are namespaced keys that tell Kubernetes to wait
  # until specific conditions are met before it fully deletes resources marked for deletion.
  # Before deleting an object you need to ensure that all finalizers has been removed. Usually this would be done
  # by the specific controller but under some circumstances it is possible to encounter a set of objects blocked
  # for deletion.
  # This plugins makes this task easier by providing a shortcut to directly removing them all.
  # Be careful when using this plugin as it may leave dangling resources or instantly deleting resources that were
  # blocked by the finalizers.
  # Author: github.com/jalvarezit
    shortCut: Ctrl-F
    confirm: true
    dangerous: true
    scopes:
      - all
    description: Remove Finalizers
    command: kubectl
    background: true
    args:
      - patch
      - --context
      - $CONTEXT
      - --namespace
      - $NAMESPACE
      - $RESOURCE_NAME
      - $NAME
      - -p
      - '{"metadata":{"finalizers":null}}'
      - --type
      - merge
  get-all-namespace:
    #get all resources in a namespace using the krew get-all plugin
    shortCut: g
    confirm: false
    description: Get All
    scopes:
      - namespaces
    command: sh
    background: false
    args:
      - -c
      - "kubectl get-all --context $CONTEXT -n $NAME | less -K"
  get-all-other:
    shortCut: g
    confirm: false
    description: Get All
    scopes:
      - all
    command: sh
    background: false
    args:
      - -c
      - "kubectl get-all --context $CONTEXT -n $NAMESPACE | less -K"
  helm-default-values:
    shortCut: Shift-V
    confirm: false
    description: Chart Default Values
    scopes:
      - helm
    command: sh
    background: false
    args:
      - -c
      - >-
        revision=$(helm history -n $NAMESPACE --kube-context $CONTEXT $COL-NAME | grep deployed | cut -d$'\t' -f1 | tr -d ' \t');
        kubectl
        get secrets
        --context $CONTEXT
        -n $NAMESPACE
        sh.helm.release.v1.$COL-NAME.v$revision -o yaml
        | yq e '.data.release' -
        | base64 -d
        | base64 -d
        | gunzip
        | jq -r '.chart.values'
        | yq -P
        | less -K
  cert-status:
    shortCut: Shift-S
    confirm: false
    description: Certificate Status
    scopes:
      - certificates
    command: bash
    background: false
    args:
      - -c
      - "cmctl status certificate --context $CONTEXT -n $NAMESPACE $NAME |& less"
  cert-renew:
    shortCut: Shift-R
    confirm: false
    description: Certificate Renew
    scopes:
      - certificates
    command: bash
    background: false
    args:
      - -c
      - "cmctl renew --context $CONTEXT -n $NAMESPACE $NAME |& less"
  secret-inspect:
    shortCut: Shift-I
    confirm: false
    description: Inspect CM Secret
    scopes:
      - secrets
    command: bash
    background: false
    args:
      - -c
      - "cmctl inspect secret --context $CONTEXT -n $NAMESPACE $NAME |& less"
  #--- Create debug container for selected pod in current namespace
  # See https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod/#ephemeral-container
  debug:
    shortCut: Shift-D
    description: Add Debug Container
    dangerous: true
    scopes:
      - containers
    command: bash
    background: false
    confirm: true
    args:
      - -c
      - "kubectl debug -it --context $CONTEXT -n=$NAMESPACE $POD --target=$NAME --image=nicolaka/netshoot:v0.12 --share-processes -- bash"
  # kubectl-blame by knight42
  # Annotate each line in the given resource's YAML with information from the managedFields to show who last modified the field.
  # Source: https://github.com/knight42/kubectl-blame
  # Install via:
  #   krew: `kubectl krew install blame`
  #   go: `go install github.com/knight42/kubectl-blame@latest`
  blame:
    shortCut: b
    confirm: false
    description: "Blame"
    scopes:
      - all
    command: sh
    background: false
    args:
      - -c
      - "kubectl-blame $RESOURCE_NAME $NAME -n $NAMESPACE --context $CONTEXT | less"